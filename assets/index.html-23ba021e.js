import{_ as e,M as o,p as c,q as i,R as s,t as n,N as t,a1 as p}from"./framework-96b046e1.js";const l="/study/images/web/01-firebase-messaging-campagin-send-test.png",u="/study/images/web/02-firebase-service-account.png",r="/study/images/web/03-mac-notification-setting.png",k="/study/images/web/04-push-notification-on-mac.png",d={},m=p('<h1 id="list" tabindex="-1"><a class="header-anchor" href="#list" aria-hidden="true">#</a> List <!-- omit in toc --></h1><ul><li><a href="#web-push-with-firebase-messaging">Web push with Firebase Messaging</a></li><li><a href="#play-with-form-and-iframe">play with form and iframe</a></li></ul><h1 id="web-push-with-firebase-messaging" tabindex="-1"><a class="header-anchor" href="#web-push-with-firebase-messaging" aria-hidden="true">#</a> Web push with Firebase Messaging</h1>',3),g={href:"https://github.com/jayground8/study-example/tree/main/example-web-push",target:"_blank",rel:"noopener noreferrer"},v=p(`<p>Firebase Messaging으로 Push notification을 보내본다. Firebase에서 project를 생성하고 아래처럼 정보를 넣어준다. <code>Notification</code>으로 알림을 받을 것인지 확인을 하고, <code>Registration token</code>을 받아 오게 된다. 그리고 <code>onMessage</code>로 notification 정보를 받게 된다.</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>module<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">import</span> <span class="token punctuation">{</span> initializeApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;https://www.gstatic.com/firebasejs/9.15.0/firebase-app.js&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">import</span> <span class="token punctuation">{</span> getMessaging<span class="token punctuation">,</span> getToken<span class="token punctuation">,</span> onMessage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;https://www.gstatic.com/firebasejs/9.15.0/firebase-messaging.js&quot;</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> firebaseConfig <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">apiKey</span><span class="token operator">:</span> <span class="token string">&quot;&lt;%= apiKey %&gt;&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">authDomain</span><span class="token operator">:</span> <span class="token string">&quot;&lt;%= authDomain %&gt;&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">projectId</span><span class="token operator">:</span> <span class="token string">&quot;&lt;%= projectId %&gt;&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">storageBucket</span><span class="token operator">:</span> <span class="token string">&quot;&lt;%= storageBucket %&gt;&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">messagingSenderId</span><span class="token operator">:</span> <span class="token string">&quot;&lt;%= messagingSenderId %&gt;&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">appId</span><span class="token operator">:</span> <span class="token string">&quot;&lt;%= appId %&gt;&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">measurementId</span><span class="token operator">:</span> <span class="token string">&quot;&lt;%= measurementId %&gt;&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">initializeApp</span><span class="token punctuation">(</span>firebaseConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> messaging <span class="token operator">=</span> <span class="token function">getMessaging</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token punctuation">;</span>

    Notification<span class="token punctuation">.</span><span class="token function">requestPermission</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">permission</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>permission<span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>permission <span class="token operator">===</span> <span class="token string">&#39;granted&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Notification permission granted!&quot;</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> <span class="token function">getToken</span><span class="token punctuation">(</span>messaging<span class="token punctuation">,</span> <span class="token punctuation">{</span> 
                    <span class="token literal-property property">vapidKey</span><span class="token operator">:</span> <span class="token string">&quot;&lt;%= vapidKey %&gt;&quot;</span> 
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">token</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;token&#39;</span><span class="token punctuation">,</span> token<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token function">onMessage</span><span class="token punctuation">(</span>messaging<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">payload</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Message received. &#39;</span><span class="token punctuation">,</span> payload<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),b=s("code",null,"firebase-messaging-sw.js",-1),f={href:"https://firebase.google.com/docs/cloud-messaging/js/receive#handle_messages_when_your_web_app_is_in_the_foreground",target:"_blank",rel:"noopener noreferrer"},h=p(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">importScripts</span><span class="token punctuation">(</span><span class="token string">&#39;https://www.gstatic.com/firebasejs/9.2.0/firebase-app.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">importScripts</span><span class="token punctuation">(</span><span class="token string">&#39;https://www.gstatic.com/firebasejs/9.2.0/firebase-messaging.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,1),q=s("code",null,"fail to load",-1),y={href:"https://stackoverflow.com/a/73727007",target:"_blank",rel:"noopener noreferrer"},_=s("code",null,"compat",-1),w=p(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">importScripts</span><span class="token punctuation">(</span><span class="token string">&#39;https://www.gstatic.com/firebasejs/9.15.0/firebase-app-compat.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">importScripts</span><span class="token punctuation">(</span><span class="token string">&#39;https://www.gstatic.com/firebasejs/9.15.0/firebase-messaging-compat.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">importScripts</span><span class="token punctuation">(</span><span class="token string">&#39;firebaseConfig.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

firebase<span class="token punctuation">.</span><span class="token function">initializeApp</span><span class="token punctuation">(</span>firebaseConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> messaging <span class="token operator">=</span> firebase<span class="token punctuation">.</span><span class="token function">messaging</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

messaging<span class="token punctuation">.</span><span class="token function">onBackgroundMessage</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">payload</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;[firebase-messaging-sw.js] Received background message &#39;</span><span class="token punctuation">,</span> payload<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>이제 test로 메세지를 보내본다. Firebase console에서 아래처럼 새로운 캠패인을 만들고 테스트로 알림을 보내본다. 이미지 링크도 넣어서 preview에서 나오는 것처럼 이미지도 같이 보일 줄 알았지만, 보이지가 않았다.</p><p><img src="`+l+'" alt="send test notification in Firebase console"></p>',3),j={href:"https://developer.mozilla.org/en-US/docs/Web/API/Notification",target:"_blank",rel:"noopener noreferrer"},x=p('<p><img src="'+u+`" alt="create a service account in Firebase console"></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;dotenv&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> admin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;firebase-admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> getMessaging <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;firebase-admin/messaging&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> serviceAccount <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./service-account.json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

admin<span class="token punctuation">.</span><span class="token function">initializeApp</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">credential</span><span class="token operator">:</span> admin<span class="token punctuation">.</span>credential<span class="token punctuation">.</span><span class="token function">cert</span><span class="token punctuation">(</span>serviceAccount<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> registrationToken <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">REGISTRATION_TOKEN</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> message <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">notification</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;FCM Message&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token string">&quot;This is an FCM Message&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">webpush</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">notification</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token string">&#39;which?&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&quot;https://www.logoarena.com/contestimages/public_new/9345/12536_1544527702_50501.png&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">fcm_options</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">link</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">http://localhost:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">PORT</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token template-punctuation string">\`</span></span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">custom</span><span class="token operator">:</span> <span class="token string">&quot;hello&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">token</span><span class="token operator">:</span> registrationToken
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// Send a message to the device corresponding to the provided</span>
<span class="token comment">// registration token.</span>
<span class="token function">getMessaging</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// Response is a message ID string.</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Successfully sent message:&#39;</span><span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Error sending message:&#39;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>그런데 백그라운드에서 알림이 뜨지 않았다. Mac의 알림 설정에서 Chrome에 대해서 아래처럼 알림을 허용해줘야 한다.</p><p><img src="`+r+'" alt="enable notification on Mac"></p><p>이제 정상적으로 크롬에서 알림이 image까지 같이 뜨는 것을 확인할 수 있다.</p><p><img src="'+k+'" alt="push notification"></p>',6),M={href:"https://developer.apple.com/documentation/usernotifications/sending_web_push_notifications_in_safari_and_other_browsers",target:"_blank",rel:"noopener noreferrer"},I={href:"https://github.com/firebase/firebase-js-sdk/issues/6620",target:"_blank",rel:"noopener noreferrer"},S=s("h1",{id:"play-with-form-and-iframe",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#play-with-form-and-iframe","aria-hidden":"true"},"#"),n(" play with form and iframe")],-1),F={href:"https://github.com/jayground8/study-example/tree/main/example-iframe",target:"_blank",rel:"noopener noreferrer"},N=p(`<p><code>iframe</code>은 이제 다른 html page를 보여줄 수 있도록 해준다. form의 속성값중에 target을 <code>iframe</code> 이름을 명시하면 <code>action</code>에 submit을하고 결과값을 <code>iframe</code>에 보여줄 수 있다. 아래 예제코드를 보면 <code>target=&quot;example&quot;</code>으로 되어 있고, <code>example</code>은 iframe의 name 값인 것을 확인할 수 있다.</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    example
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/one<span class="token punctuation">&quot;</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>post<span class="token punctuation">&quot;</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>example<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>submit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>example<span class="token punctuation">&quot;</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/landing<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>이제 submit 버튼을 누르게 되면 <code>/one</code> 경로로 <code>POST</code> 요청을 하고, 결과값을 iframe에 보여주게 된다. 그리고 iframe에서 iframe을 담고 있는 html에 데이터를 전달할 수도 있다.</p><p><code>index.html</code>에서 <code>message</code> type의 이벤트를 구독하도록 하고,</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>iframe</code>에 있는 page에서 아래처럼 postMessage로 데이터를 보내면 이벤트가 발생하여 데이터를 전달 받을 수 있다.</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">const</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;submit&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  btn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    window<span class="token punctuation">.</span>parent<span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span><span class="token string">&quot;data from iframe&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>그리고 <code>iframe</code>에서 form으로 이동을 할 때 <code>target</code>을 <code>_parent</code>으로 하면 부모 페이지에서 페이지 전환이 될 수 있다.</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/three<span class="token punctuation">&quot;</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>post<span class="token punctuation">&quot;</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>_parent<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>two<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>two<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>submit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9);function A(T,C){const a=o("ExternalLinkIcon");return c(),i("div",null,[m,s("p",null,[s("a",g,[n("예제"),t(a)])]),v,s("p",null,[n("그리고 "),b,n("를 추가해야되는데, 여기에 백그라운드일 때 알림을 보여줄 수 있도록 설정한다. "),s("a",f,[n("Firebase 문서"),t(a)]),n("에서는 아래처럼 service worker에서 global하게 불러올 파일을 정의하고 있다.")]),h,s("p",null,[n("하지만 "),q,n("가 발생하였고, "),s("a",y,[n("Stackoverflow 답변"),t(a)]),n("에서 버전 8 이상에서는 아래처럼 "),_,n("이 부터 있는 라이브러리를 가져와야 한다.")]),w,s("p",null,[n("그래서 아래처럼 Firebase console에서 service account를 발급하고, Firebase Admin SDK를 통해서 push 알림을 보냈다. icon에 보일 image link를 정의해줬고, fcm_options의 link값도 설정하여 알림을 눌렀을 때 해당 링크로 갈 수 있도록 하였다. 보낼 수 있는 property는 "),s("a",j,[n("mdn web docs"),t(a)]),n("를 참고한다.")]),x,s("p",null,[n("Safari에서도 "),s("a",M,[n("MacOs 13에서 Safari 16에서 Push API와 Notification API를 지원"),t(a)]),n("한다고 나와있지만, FCM으로 push notification을 보내지 못하는 것 같다. "),s("a",I,[n("아직 open 상태인 관련된 github issue"),t(a)])]),S,s("p",null,[s("a",F,[n("예제"),t(a)])]),N])}const P=e(d,[["render",A],["__file","index.html.vue"]]);export{P as default};
